# Makefile

# Normal build will link against the shared library for simavr
# in the current build tree, so you don't have to 'install' to
# run simavr or the examples.
#
# For package building, you will need to pass RELEASE=1 to make
RELEASE	?= 0

DESTDIR = /usr/local
PREFIX = ${DESTDIR}

.PHONY: doc

all:	build-simavr build-tests build-examples build-parts

build-simavr: Libs.mk
	$(MAKE) -C simavr RELEASE=$(RELEASE)

build-tests: build-simavr
	$(MAKE) -C tests RELEASE=$(RELEASE)

build-examples: build-simavr
	$(MAKE) -C examples RELEASE=$(RELEASE)

build-parts: build-examples
	$(MAKE) -C examples/parts RELEASE=$(RELEASE)

run_tests: build-simavr build-tests
	$(MAKE) -C tests run_tests

install: install-simavr install-parts

install-simavr:
	$(MAKE) -C simavr install RELEASE=$(RELEASE) DESTDIR=$(DESTDIR) PREFIX=$(PREFIX)

install-parts:
	$(MAKE) -C examples/parts install RELEASE=$(RELEASE) DESTDIR=$(DESTDIR) PREFIX=$(PREFIX)


# Find whether libelf and libdwarf are available.

Libs.mk:
	@echo CONF $@
	@echo "# Autogenerated: do not edit." > $@
	@if \
	  echo  "#include <libelf.h>" > testit.c && \
	  $(CC) -E $(CFLAGS) ${AVR_CPPFLAGS} testit.c  > /dev/null 2>&1 ; \
	then  \
	  echo CFLAGS += -DHAVE_LIBELF >> $@ ; \
	  echo LDFLAGS += -lelf >> $@ ; \
	  if \
	    echo  "#include <dwarf.h>" > testit.c && \
	    $(CC) -E $(CFLAGS) ${AVR_CPPFLAGS} testit.c > /dev/null 2>&1 ; \
	  then  \
	    echo CFLAGS += -DHAVE_LIBDWARF >> $@ ; \
	    echo LDFLAGS += -ldwarf >> $@ ; \
	  fi \
	fi
	@rm -f testit.c

doc:
	$(MAKE) -C doc RELEASE=$(RELEASE)

clean:
	$(MAKE) -C simavr clean
	$(MAKE) -C tests clean
	$(MAKE) -C examples clean
	$(MAKE) -C examples/parts clean
	$(MAKE) -C doc clean
	rm -f Libs.mk

